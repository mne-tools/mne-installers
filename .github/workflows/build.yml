name: Build the installers

on:
  push:
    branches: [ main ]
    tags:
    - '*'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, macos-10.15, macos-11, windows-2019, windows-2022]

    runs-on: ${{ matrix.os }}

    continue-on-error: true

    # concurrency: 
    #   group: ${{ github.head_ref }}
    #   cancel-in-progress: true

    steps:
      - uses: actions/checkout@v2

      - name: Install Micromamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment.yml
          micromamba-version: latest

      - name: Build installer
        shell: bash -l {0}
        run: |
          constructor recipes/mne-python_0.24

      - name: Run installer (macOS)
        if: ${{ runner.os == 'macOS' }}
        run: |
          echo `pwd`
          installer -pkg MNE-Python-0.24.1_2-macOS_Intel.pkg -target CurrentUserHomeDirectory

      - name: Run installer (Linux)
        if: ${{ runner.os == 'Linux' }}
        run: |
          echo `pwd`
          sh ./MNE-Python-0.24.1_2-Linux.sh -b

      # https://docs.anaconda.com/anaconda/install/silent-mode.html
      - name: Run installer (Windows)
        if: ${{ runner.os == 'Windows' }}
        shell: cmd  # Couldn't get PowerShell to properly perform install
        run: |
          .\MNE-Python-0.24.1_2-Windows.exe /S /InstallationType=JustMe /AddToPath=1

      - name: Check installation (macOS)
        if: ${{ runner.os == 'macOS' }}
        run: |
          source ~/mne-python_0.24.1_2/bin/activate
          conda info
          mamba list
          mne sys_info

      - name: Check installation (Linux)
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get install -y xvfb
          source ~/mne-python/0.24.1_2/bin/activate
          conda info
          mamba list
          xvfb-run mne sys_info

      - name: Check installation (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
          ./gl-ci-helpers/appveyor/install_opengl.ps1

          $MneRoot = "$env:UserProfile\mne-python\0.24.1_2"
          . "$MneRoot\shell\condabin\conda-hook.ps1"
          conda activate $MneRoot
          conda info
          mamba list
          . "$MneRoot\Scripts\mne.exe" sys_info

      # - name: Archive artifacts
      #   if: ${{ matrix.os == 'ubuntu-18.04' || matrix.os == 'macOS-10.15' || matrix.os == 'windows-2016' }}
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: MNE-Python
      #     path: |
      #       MNE-Python-*.*

      - name: Release
        if: |
          github.ref_type == 'tag' &&
          (matrix.os == 'ubuntu-18.04' || matrix.os == 'macOS-10.15' || matrix.os == 'windows-2019')
        uses: ncipollo/release-action@v1
        with:
          artifacts: "MNE-Python-*installer*.*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          prerelease: true
          allowUpdates: true
          generateReleaseNotes: true

  add_release_hashes:
    if: github.ref_type == 'tag'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Generate hashes of release artifacts
        uses: MCJack123/ghaction-generate-release-hashes@v1
        with:
          hash-type: sha256
          file-name: hashes.txt

      - name: Add hashes to release
        uses: ncipollo/release-action@v1
        with:
          artifacts: hashes.txt
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          prerelease: true
          allowUpdates: true
          generateReleaseNotes: true

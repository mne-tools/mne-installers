name: autofix.ci
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true

on:  # yamllint disable-line rule:truthy
  # We only do this on PRs to avoid the (admittedly unlikely) scenario that
  # we run, green, wait, merge, then the build on `main` could fail because conda
  # has updated during the "green" and then the "build on `main`" steps
  pull_request:
    branches: "*"

jobs:
  check-skip:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.skip.outputs.skip }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check skip
        id: skip
        run: |
          set -eo pipefail
          PR_SHA="${{ github.event.pull_request.head.sha }}"
          echo "Got from PR_SHA=$PR_SHA"
          MSG=$(git show -s $PR_SHA)
          echo "$MSG"
          if [[ "$MSG" == *"[skip autofix]"* ]] || [[ "$MSG" == *"[autofix skip]"* ]]; then
            echo "Skipping because [skip autofix] found in commit message" >> $GITHUB_STEP_SUMMARY
            echo "skip::true" | tee $GITHUB_OUTPUT
          else
            echo "[skip autofix] not found in commit message" >> $GITHUB_STEP_SUMMARY
            echo "skip::false" | tee $GITHUB_OUTPUT
          fi
  deps:
    runs-on: ubuntu-latest
    needs: check-skip
    if: needs.check-skip.outputs.skip != 'true'
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.12"
      - run: pip install packaging requests pyyaml
      - run: python tests/test_outdated.py  # can update the file in place
      - uses: autofix-ci/action@635ffb0c9798bd160680f18fd73371e355b85f27
        if: failure()
